#!/usr/bin/env bash
set -o nounset
set -o errexit

function ctrl_c() {
	echo "Stopping containers"
	docker stop ${VIRTUOSO_IMAGE:-} ${QUAD_LOGGER:-} ${NGINX:-}
	echo "Removing containers"
	docker rm ${VIRTUOSO_IMAGE:-} ${QUAD_LOGGER:-} ${NGINX:-}
}

trap ctrl_c EXIT

echo ""
echo "Welcome to the quad logger playground!"
echo "We'll be running 3 docker containers"
echo ""
read -p "Note: You can terminate the playground at any time by pressing <ctrl-c>... (Press <enter> to continue)"
echo ""
echo "## 1. A container running a demo openvirtuoso server with some data preloaded"
read -p "At wat port would you like to be able to access the openvirtuoso server? [8890] " VIRTUOSO_PORT
VIRTUOSO_IMAGE=$(docker run -d -p ${VIRTUOSO_PORT:-8890}:8890 jauco/virtuoso-quad-log server)

until docker logs $VIRTUOSO_IMAGE 2>&1 | grep -q 'Server online at 1111' ; do
	sleep 1
done
echo "Launched! The virtuoso server will be running a checkpoint every 10 seconds. This means that every 10 seconds a new log file is available for the quad logger to read."

mkdir -p logs
cat > logs/index.htm <<-EOF
	<ol>
		<li></li>
	</ol>
EOF

echo "## 2. the quad logger container"
QUAD_LOGGER=$(docker run -d --link "${VIRTUOSO_IMAGE}:virtuoso" -e "RUN_INTERVAL=60" -e "INSERT_PROCEDURE=y" -e "CUR_USER=$UID" -v $PWD/logs:/datadir jauco/virtuoso-quad-log)
echo "Launched! The quad logger will be regenerate the logs every minute, so there will be at most a 70 second delay before your changes are visible in the logs."

echo "##  3. a static file web server that hosts the files that the quad log container generates"
read -p "At wat port would you like to be able to access the logs generated by the quad logger? [8080] " LOGS_SERVER_PORT
NGINX=$(docker run -v $PWD/logs:/usr/share/nginx/html:ro -d -p ${LOGS_SERVER_PORT:-8080}:80 nginx)
echo "Launched! The web server can be reached at http://localhost:${LOGS_SERVER_PORT:-8080}"

echo ""
echo "I'll now be showing the combined logs of the three containers"
{ docker logs --follow $VIRTUOSO_IMAGE 2>&1 | sed 's/.*/VIRTUOSO   : &/' & docker logs --follow $QUAD_LOGGER 2>&1 | sed 's/.*/QUAD LOGGER: &/' & docker logs --follow $NGINX 2>&1 | sed 's/.*/NGINX      : &/' ; }
