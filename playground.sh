#!/usr/bin/env bash
set -o nounset
set -o errexit

function ctrl_c() {
	echo "Stopping containers"
	docker stop ${VIRTUOSO_IMAGE:-} ${QUAD_LOGGER:-} ${NGINX:-} ${CRAWLER:-}
	echo "Removing containers"
	docker rm ${VIRTUOSO_IMAGE:-} ${QUAD_LOGGER:-} ${NGINX:-} ${CRAWLER:-}
}

trap ctrl_c EXIT

echo ""
echo "Welcome to the quad logger playground!"
echo ""
read -p "Note: You can terminate the playground at any time by pressing <ctrl-c>... (Press <enter> to continue)"
echo ""
echo "We'll be running 3 docker containers"
echo " 1. A container running a demo openvirtuoso server with some data preloaded"
echo " 2. a static file web server that hosts the files that the quad log container generates"
echo " 3. the quad logger container"
echo ""
echo "The virtuoso server will be running a checkpoint every 10 seconds. This means that every 10 seconds a new log file is available for the quad logger to read."
echo "The quad logger will regenerate the logs every minute, so there will be at most a 70 second delay before your changes are visible in the logs."
read -p "At what port would you like to be able to access the openvirtuoso server? [8890] " VIRTUOSO_PORT
VIRTUOSO_PORT=${VIRTUOSO_PORT:-8890}
# read -p "At what port would you like to be able to access the logs generated by the quad logger? [8080] " LOGS_SERVER_PORT
# LOGS_SERVER_PORT=${LOGS_SERVER_PORT:-8080}
read -e -p "Where should we put the data that the logger generates and the server hosts? [./logs] " DATA_DIR
DATA_DIR=${DATA_DIR:-./logs}

mkdir -p "$DATA_DIR"
cat > "$DATA_DIR"/index.htm <<-EOF
	You can browse to <a href="http://localhost:${VIRTUOSO_PORT}">the virtuoso server</a> and login with user: <pre>dba</pre> and password: <pre>dba</pre>.
	You can upload data using the [quad store upload](http://localhost:${VIRTUOSO_PORT}/conductor/rdf_import.vspx)
	And see some data that's pre-loaded by doing a [SPARQL query](http://localhost:${VIRTUOSO_PORT}/conductor/sparql_input.vspx) such as <pre>with <http://example.com/clariah> select ?s, ?p, ?o { ?s ?p ?o}</pre>

	<ol>
		<li></li>
	</ol>
EOF

NGINX=$(docker run -v $PWD/"$DATA_DIR":/usr/share/nginx/html:ro -d nginx)
echo "Launched the web server!"
NGINX_IP=$(docker inspect -f '{{.NetworkSettings.IPAddress}}' $NGINX)


mkdir -p "$DATA_DIR/.well-known"
# See the resourcesync spec for various methods to publish your resourcesync documents
cat > "$DATA_DIR/.well-known/resourcesync" <<-EOF
	<?xml version="1.0" encoding="UTF-8"?>
	<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
	        xmlns:rs="http://www.openarchives.org/rs/terms/">
	  <rs:md capability="description"/>
	  <url>
	      <loc>http://${NGINX_IP}/capability-list.xml</loc>
	      <rs:md capability="capabilitylist"/>
	  </url>
	</urlset>
EOF

VIRTUOSO_IMAGE=$(docker run -d -p $VIRTUOSO_PORT:8890 huygensing/virtuoso-quad-logger server)
until docker logs $VIRTUOSO_IMAGE 2>&1 | grep -q 'Server online at 1111' ; do
	sleep 1
done
echo "Launched the virtuoso server!"

QUAD_LOGGER=$(docker run -d --link "${VIRTUOSO_IMAGE}:virtuoso" --link $NGINX:HTTP_SERVER -e "RUN_INTERVAL=60" -e "INSERT_PROCEDURE=y" -e "CUR_USER=$UID" -v $PWD/logs:/datadir huygensing/virtuoso-quad-logger)
echo "Launched! The quad logger!"
echo ""
echo "Browse to http://${NGINX_IP} to get started"
echo "I'll now be showing the combined logs of the three containers"

CRAWLER=$(docker run --link ${NGINX}:nginx -d -p 8180 rene/oai-rs-client)

{ docker logs --follow $CRAWLER 2>&1 | sed 's/.*/CRAWLER   : &/' & docker logs --follow $VIRTUOSO_IMAGE 2>&1 | sed 's/.*/VIRTUOSO   : &/' & docker logs --follow $QUAD_LOGGER 2>&1 | sed 's/.*/QUAD LOGGER: &/' & docker logs --follow $NGINX 2>&1 | sed 's/.*/NGINX      : &/' ; }
